Exercitiu 1.

var a=1; 
function b(){
 a=10;
 return;
 }
 b();
 console.log('a='+a);
 
Exercitiu 2.
 for (var i=0; i<5; i++){(function(i){
  setTimeout(function()
  {console.log(i);}, i*1000);
})(i);
}

Exercitiu 3.

setTimeout(function(){
  try {
throw new Error('example');
}
catch (err) {
console.log(err);}
}, 1000);

Exercitiu 4.
es6:
class Animal{
    constructor(type){
        this.type=type;
        this.color=color;
    }
    getColor(){
        return this.color;
    }
}

class Fish extends Animal{
    constructor(){
        super(type);
        this.fishType=fishType;
    }
    getFishType(){
        return this.fishType;
    }
}
class Dog extends Animal{
    constructor(){
        super(type);
        this.dogType=dogType;
    }
    getDogType(){
        return this.dogType;
    }
}
class DogType{
    constructor(typeName){
        this.typeName=typeName;
        this.furColor=furColor;
    }
    getFurColor(){
        return  this.furColor;
    }
}


es5:
function Animal(type,color){
    this.type=type;
    this.color=color;
}
Animal.prototype.getColor=function(){
    return this.color;
}
function Fish(){
    Animal.call(this,type);
    this.fishType=fishType;
}
Fish.prototype=Object.create(Animal.prototype);
Fish.prototype.constructor=Fish;
Fish.prototype.getFishType=function(){
    return this.fishType;
}
function Dog(){
    Animal.call(this,type);
    this.dogType=dogType;
}
Dog.prototype=Object.create(Dog.prototype);
Dog.prototype.constructor=Dog;
Dog.prototype.getDogType=function(){
    return this.dogType;
}

function DogType(typeName, furColor){
this.typeName=typeName;
this.furColor=furColor;
}
DogType.prototype.getFurColor=function(){
    return this.furColor;
}